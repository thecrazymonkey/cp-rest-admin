---
- name: Manage Rolebindings For Principal, Role and Cluster Scope
  uri:
    url: "{{mds_server_url}}/security/1.0/principals/{{item.principal}}/roles/{{ item.role }}"
    method: "{{http_method}}"
    validate_certs: true
    client_cert: "{{ none if client_tls_cert is not defined else client_tls_cert }}"
    client_key: "{{ none if client_tls_key is not defined else client_tls_key }}"
    ca_path: "{{ none if ca_tls_path is not defined else ca_tls_path }}"
    force_basic_auth: true
    headers:
      Authorization: "{{ authorization_header }}"
    body_format: json
    body: "{ \"clusterName\": \"{{item.clusterName}}\" }"
    status_code: 204
  loop: "{{ rbac_list }}"
  register: result
  changed_when: result.status == 204
  when: item.role | regex_search("^\w+Admin$|^Operator$") != none

- name: Manage Rolebindings For Principal, Scope and Set of resources
  uri:
    url: "{{mds_server_url}}/security/1.0/principals/{{item.principal}}/roles/{{ item.role }}/bindings"
    method: "{{http_method}}"
    validate_certs: true
    client_cert: "{{ none if client_tls_cert is not defined else client_tls_cert }}"
    client_key: "{{ none if client_tls_key is not defined else client_tls_key }}"
    ca_path: "{{ none if ca_tls_path is not defined else ca_tls_path }}"
    force_basic_auth: true
    headers:
      Authorization: "{{ authorization_header }}"
    body_format: json
    status_code: 204
    body: "{ \"scope\": { \"clusterName\": \"{{item.clusterName}}\" }, \"resourcePatterns\": {{item.resources}} }"
  loop: "{{ rbac_list }}"
  register: result
  changed_when: result.status == 204
  when: item.role | regex_search("^\w+Admin$|^Operator$") == none
