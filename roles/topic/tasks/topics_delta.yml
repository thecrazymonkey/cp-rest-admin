---
# make out delta operation from the existing and intended topics setup
# input topics_dump - current state; topics - desired state
- debug:
    msg:
      - "Current state>{{ topics_current }}"
      - "Desired state>{{ topics }}"
    verbosity: 2

- name: To add
# check the topics to add, figure out the config updates later
  set_fact:
    topics_to_add: "{{topics_to_add + [item] }}"
  loop: "{{ topics }}"
  when: item.topic_name in topics_to_add_name
  vars:
    topics_to_add_name: "{{topics | map(attribute='topic_name') | difference(topics_current | map(attribute='topic_name') )}}"
    topics_to_add: []

- name: To remove
# only check against the topic names, TODO might need to add check against "protected" topic list
  set_fact:
    topics_to_delete: "{{topics_current | map(attribute='topic_name') | difference(topics | map(attribute='topic_name')) | list }}"

# initialize list with changes
- name: Initialize Diffs
  set_fact:
    topics_to_reconfigure: "{{topics | difference(topics_current) }}"

- debug:
    msg: "To reconfigure>{{ topics_to_reconfigure }}"
    verbosity: 3

- name: To reconfigure partitions
# check reconfiguration required - only for topics we are not deleting
  set_fact:
    topics_to_reconfigure_part: "{{ topics_to_reconfigure_part + [{'topic_name': item.1.0.topic_name, 'partitions_count': item.1.0.partitions_count}] }}"
  loop: "{{ (topics_to_reconfigure + topics_current) | groupby('topic_name')}}"
  when: (item.1.0.topic_name not in topics_to_delete) and
        (item.1.0.partitions_count > (item.1.1.partitions_count|d(0))) and (item.1.1.partitions_count|d(0) > 0)

- name: To reconfigure configs
    # check the configs for changes
  include_tasks: tasks/configs_helper.yml
  # debug:
  #   msg="{{item_topic.1.1.configs|d([])|count > 0}}--{{item_topic.1.0.configs |
  #       symmetric_difference(item_topic.1.1.configs|d([]))}}--{{item_topic.1.0.topic_name not in topics_to_delete}}"
  loop: "{{ (topics_to_reconfigure + topics_current) | groupby('topic_name')}}"
  loop_control:
    loop_var: item_topic
  when: (item_topic.1.1.configs|d([])|count > 0) and (item_topic.1.0.topic_name not in topics_to_delete)
  vars:
    topic_in: "{{ item_topic.1.0 }}"
    topic_state: "{{ item_topic.1.1 }}"

- debug:
    var: topics_to_add
    verbosity: 2
- debug:
    var: topics_to_delete
    verbosity: 2
- debug:
    var: topics_to_reconfigure_part
    verbosity: 2
- debug:
    var: topics_to_reconfigure_configs
    verbosity: 2
